// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
Object {
  "Outputs": Object {
    "bitcoinBastionHostId176E2C65": Object {
      "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
      "Value": Object {
        "Ref": "bitcoin2C7F668A",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "Ip": Object {
      "Properties": Object {
        "Domain": "vpc",
        "InstanceId": Object {
          "Ref": "bitcoin2C7F668A",
        },
      },
      "Type": "AWS::EC2::EIP",
    },
    "bitcoin2C7F668A": Object {
      "DependsOn": Array [
        "bitcoinInstanceRoleDefaultPolicy6FD676C5",
        "bitcoinInstanceRoleF37CB52A",
      ],
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvdb",
            "Ebs": Object {
              "SnapshotId": "snap-048e503a8320e1756",
              "VolumeSize": 500,
              "VolumeType": "sc1",
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "bitcoinInstanceProfile87DC4746",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "securitygroupE9E43AD0",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "vpcpublicsubnetSubnet1Subnet46D8ED10",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "bitcoin-full-node",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "bitcoinInstanceProfile87DC4746": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "bitcoinInstanceRoleF37CB52A",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "bitcoinInstanceRoleDefaultPolicy6FD676C5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ssmmessages:*",
                "ssm:UpdateInstanceInformation",
                "ec2messages:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "bitcoinInstanceRoleDefaultPolicy6FD676C5",
        "Roles": Array [
          Object {
            "Ref": "bitcoinInstanceRoleF37CB52A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "bitcoinInstanceRoleF37CB52A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "bitcoin-full-node",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "bitcoindekokuninfoBA485FDE": Object {
      "Properties": Object {
        "HostedZoneId": "Z1SC2QTMQPRZLB",
        "Name": "bitcoin.dekokun.info.",
        "ResourceRecords": Array [
          Object {
            "Ref": "Ip",
          },
        ],
        "TTL": "1800",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "securitygroupE9E43AD0": Object {
      "Properties": Object {
        "GroupDescription": "MyTestStack/securitygroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow bitcoin access from the world",
            "FromPort": 8333,
            "IpProtocol": "tcp",
            "ToPort": 8333,
          },
        ],
        "VpcId": Object {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "vpcA2121C38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "vpcIGWE57CBDCA": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "vpcVPCGW7984C166": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "vpcIGWE57CBDCA",
        },
        "VpcId": Object {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "vpcpublicsubnetSubnet1DefaultRoute63EFBA0F": Object {
      "DependsOn": Array [
        "vpcVPCGW7984C166",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "vpcIGWE57CBDCA",
        },
        "RouteTableId": Object {
          "Ref": "vpcpublicsubnetSubnet1RouteTableF9C6B9E0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "vpcpublicsubnetSubnet1RouteTableAssociation70CB5819": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "vpcpublicsubnetSubnet1RouteTableF9C6B9E0",
        },
        "SubnetId": Object {
          "Ref": "vpcpublicsubnetSubnet1Subnet46D8ED10",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "vpcpublicsubnetSubnet1RouteTableF9C6B9E0": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestStack/vpc/publicsubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "vpcpublicsubnetSubnet1Subnet46D8ED10": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/16",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "publicsubnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyTestStack/vpc/publicsubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "vpcA2121C38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
